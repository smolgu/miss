{
  "swagger": "2.0",
  "info": {
    "title": "models.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/auth/vk": {
      "get": {
        "summary": "Авторизация",
        "operationId": "VkAuth",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsVkAuthReply"
            }
          }
        },
        "parameters": [
          {
            "name": "vk_token",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Love"
        ]
      }
    },
    "/api/v1/dialogs": {
      "get": {
        "summary": "Vote vote for user",
        "operationId": "GetDialogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsDialogsReply"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Love"
        ]
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "summary": "GetUser возвращает информацию о пользователе по его ID",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsUser"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Love"
        ]
      }
    },
    "/api/v1/users/{user_id}/vote": {
      "get": {
        "summary": "Vote vote for user",
        "operationId": "Vote",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsVoteReply"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vote_type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "vote_none",
              "dislike",
              "like"
            ],
            "default": "vote_none"
          }
        ],
        "tags": [
          "Love"
        ]
      }
    },
    "/api/v1/voting/profiles": {
      "get": {
        "summary": "RandomUsers возвращает рандомные профили, которые ещё не лайкал текущий\nюзер",
        "operationId": "RandomUsers",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/modelsUsersReply"
            }
          }
        },
        "parameters": [
          {
            "name": "min_age",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "max_age",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sex",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Woman",
              "Man"
            ],
            "default": "Woman"
          },
          {
            "name": "token",
            "description": "@inject_tag: validate:\"required\".",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Love"
        ]
      }
    }
  },
  "definitions": {
    "modelsDialog": {
      "type": "object",
      "properties": {
        "parcipant_id": {
          "type": "string",
          "format": "int64"
        },
        "last_message": {
          "$ref": "#/definitions/modelsMessage"
        },
        "readed": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modelsDialogsReply": {
      "type": "object",
      "properties": {
        "dialogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsDialog"
          }
        }
      }
    },
    "modelsImage": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "hash_version": {
          "type": "string",
          "format": "int64"
        },
        "ratio": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "modelsMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "dialog_id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "sender_id": {
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "@inject_tag: xorm:\"jsonb notnull default '{}'::jsonb 'created_at'\""
        }
      }
    },
    "modelsSex": {
      "type": "string",
      "enum": [
        "Woman",
        "Man"
      ],
      "default": "Woman"
    },
    "modelsUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "sex": {
          "$ref": "#/definitions/modelsSex"
        },
        "group_id": {
          "type": "string",
          "format": "int64"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsImage"
          }
        },
        "messages_from_all": {
          "type": "boolean",
          "format": "boolean"
        },
        "bio": {
          "type": "string"
        },
        "rating": {
          "type": "string",
          "format": "int64"
        },
        "age": {
          "type": "string",
          "format": "int64"
        },
        "vk_id": {
          "type": "string",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "@inject_tag: xorm:\"jsonb notnull default '{}'::jsonb 'created_at'\""
        },
        "avatar_url": {
          "type": "string"
        }
      }
    },
    "modelsUsersReply": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsUser"
          }
        }
      }
    },
    "modelsVkAuthReply": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelsUser"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "modelsVoteReply": {
      "type": "object",
      "properties": {
        "matched": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "modelsVoteType": {
      "type": "string",
      "enum": [
        "vote_none",
        "dislike",
        "like"
      ],
      "default": "vote_none"
    }
  }
}
